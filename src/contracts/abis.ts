// ABI for CrowdfundingFactory contract
export const CROWDFUNDING_FACTORY_ABI = [
  "function createProject(string memory _title, string memory _description, uint256 _fundingGoal, string[] memory _milestoneDescriptions, uint256[] memory _milestoneAmounts, string memory _tokenName, string memory _tokenSymbol, uint256 _totalSupply, uint256 _fundingDuration) external returns (address)",
  "function approveProject(address _contractAddress) external",
  "function rejectProject(address _contractAddress) external",
  "function getAllProjects() external view returns (address[] memory)",
  "function getApprovedProjects() external view returns (address[] memory)",
  "function getCreatorProjects(address _creator) external view returns (address[] memory)",
  "function projects(address) external view returns (address contractAddress, address creator, string memory title, string memory description, uint256 fundingGoal, uint256 createdAt, bool isApproved, bool isActive)",
  "function getProjectCount() external view returns (uint256)",
  "function platformFeePercentage() external view returns (uint256)",
  "function calculatePlatformFee(uint256 _amount) external view returns (uint256)",
  "event ProjectCreated(address indexed contractAddress, address indexed creator, string title, uint256 fundingGoal)",
  "event ProjectApproved(address indexed contractAddress)",
  "event ProjectRejected(address indexed contractAddress)"
];

// ABI for EquityCrowdfundingProject contract
export const EQUITY_CROWDFUNDING_PROJECT_ABI = [
  "function contribute() external payable",
  "function submitMilestone(uint256 _milestoneId) external",
  "function voteOnMilestone(uint256 _milestoneId, bool _vote) external",
  "function releaseFunds(uint256 _milestoneId) external",
  "function refund() external",
  "function activateProject() external",
  "function getMilestone(uint256 _milestoneId) external view returns (string memory description, uint256 amount, bool isSubmitted, bool isApproved, bool isRejected, uint256 yesVotes, uint256 noVotes, uint256 submittedAt, uint256 votingDeadline)",
  "function getBackerInfo(address _backer) external view returns (uint256 contribution, uint256 tokens, uint256 contributedAt, bool hasRefunded)",
  "function getProjectInfo() external view returns (string memory title, string memory description, uint256 goal, uint256 raised, uint256 deadline, bool active, bool successful, bool completed, uint256 milestones, uint256 currentMilestoneIndex)",
  "function getBackerCount() external view returns (uint256)",
  "function hasVoted(uint256 _milestoneId, address _voter) external view returns (bool)",
  "function getVoteChoice(uint256 _milestoneId, address _voter) external view returns (bool)",
  "function projectCreator() external view returns (address)",
  "function fundingGoal() external view returns (uint256)",
  "function totalRaised() external view returns (uint256)",
  "function fundingDeadline() external view returns (uint256)",
  "function milestoneCount() external view returns (uint256)",
  "function currentMilestone() external view returns (uint256)",
  "function isActive() external view returns (bool)",
  "function fundingSuccessful() external view returns (bool)",
  "function projectCompleted() external view returns (bool)",
  "function balanceOf(address account) external view returns (uint256)",
  "function totalSupply() external view returns (uint256)",
  "function name() external view returns (string memory)",
  "function symbol() external view returns (string memory)",
  "function decimals() external view returns (uint8)",
  "event ContributionMade(address indexed backer, uint256 amount, uint256 tokens)",
  "event MilestoneSubmitted(uint256 indexed milestoneId, string description)",
  "event VoteCast(uint256 indexed milestoneId, address indexed voter, bool vote, uint256 tokenWeight)",
  "event MilestoneApproved(uint256 indexed milestoneId, uint256 amount)",
  "event MilestoneRejected(uint256 indexed milestoneId)",
  "event FundsReleased(uint256 indexed milestoneId, uint256 amount)",
  "event RefundIssued(address indexed backer, uint256 amount)",
  "event ProjectActivated()"
];